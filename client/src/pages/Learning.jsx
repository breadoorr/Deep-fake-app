import Header from "../components/Header";
import Footer from "../components/Footer";
import { useState, useEffect } from "react";
import {Navigation} from "../components/Navigation";
import './Learning.css'

export const Learning = () => {
    const [quizStarted, setQuizStarted] = useState(false);
    const [score, setScore] = useState(0);
    const [currentQuestion, setCurrentQuestion] = useState(0);
    const [currentInfo, setCurrentInfo] = useState(0);
    const [currentPage, setCurrentPage] = useState(0);

    useEffect(() => {
        document.body.style.backgroundColor = "#111";
        document.body.style.color = "#fff";
    }, []);

    const questions = [
        {
            question: "What is the primary technology behind deepfakes?",
            options: [
                "Blockchain",
                "Generative Adversarial Networks (GANs)",
                "Neural Style Transfer",
                "Convolutional Neural Networks",
            ],
            correct: 1,
        },
        {
            question: "What role does the discriminator play in the GAN process?",
            options: [
                "Detects fake content",
                "Generates fake content",
                "Collects training data",
                "Adjusts image resolution",
            ],
            correct: 0,
        },
        {
            question: "Which of the following is a positive use of deepfakes?",
            options: [
                "Fake news",
                "Political manipulation",
                "AI-assisted therapy",
                "Financial fraud",
            ],
            correct: 2,
        },
        {
            question: "What is a common sign of a deepfake?",
            options: [
                "Perfectly natural expressions",
                "Asymmetrical lighting or irregular blinking",
                "Flawless audio synchronization",
                "Consistent file metadata",
            ],
            correct: 1,
        },
        {
            question: "What is a common ethical concern regarding deepfakes?",
            options: [
                "Enhancing movie realism",
                "Invading privacy or spreading misinformation",
                "Reducing video production costs",
                "Training AI models",
            ],
            correct: 1,
        }
    ];

    const info = [
        {
            header: "Introduction to Deepfakes",
            content: (
                <>
                    Deepfake - synthetic media, including images, videos, and audio, generated by artificial intelligence (AI) technology that portray something that does not exist in reality or events that have never occurred.
                    <a
                        href="https://www.britannica.com/technology/deepfake"
                        target="_blank"
                        rel="noopener noreferrer"
                        style={{ color: "#4CAF50", textDecoration: "none", marginLeft: "5px" }}
                    >
                        Read more
                    </a>
                </>
            )
        },

        {
            header: "How Deepfakes Are Made",
            content: (
                <>
                    Deepfakes use massive image and video datasets to train AI algorithms. To iteratively increase the realism of generated media, GANs use two networks: the discriminator, which detects fakes, and the generator, which produces fake content.
                    <a
                        href="https://spectrum.ieee.org/what-is-deepfake"
                        target="_blank"
                        rel="noopener noreferrer"
                        style={{ color: "#4CAF50", textDecoration: "none", marginLeft: "5px" }}
                    >
                        Read more
                    </a>
                </>
            )
        },

        {
            header: "Applications of Deepfakes",
                content: 'Positive Uses:' +
                    "- Entertainment" +
                    "- Education and Training" +
                    "Negative Uses:" +
                    "- Political Propaganda" +
                    "- Fake News" +
                    "- Fraud"
        },

        {
            header: "How to Distinguish Deepfakes from Real Media",
            content: (
                <>
                    {/*To spot deepfakes, look for these signs:*/}
                    <ul style={{ textAlign: "left", marginTop: "1rem", marginBottom: "1rem" }}>
                        <li><strong>Unnatural Details:</strong> Asymmetrical lighting, irregular expressions, or blinking.</li>
                        <li><strong>Image Artifacts:</strong> Blurriness, pixelation, or odd face boundaries.</li>
                        <li><strong>Audio-Visual Mismatches:</strong> Lip movements not matching audio.</li>
                        <li><strong>Metadata Analysis:</strong> File properties showing editing.</li>
                        <li><strong>Detection Tools:</strong> Use tools like Deepware Scanner or Microsoft's Video Authenticator.</li>
                    </ul>
                    <a
                        href="https://www.csiro.au/en/news/all/articles/2024/february/detect-deepfakes"
                        target="_blank"
                        rel="noopener noreferrer"
                        style={{ color: "#4CAF50", textDecoration: "none" }}
                    >
                        Read more
                    </a>
                </>
            )
        },

        {
            header: "Ethical and Legal Implications",
            content: (
                <>
                    "Deepfakes present moral risks like as invasions of privacy, damage to one's reputation, and abuse of cybercrime. Although there are few legal restrictions, some areas demand the disclosure of AI content and prohibit detrimental usage."
                    <a
                        href="https://jme.bmj.com/content/early/2024/09/30/jme-2024-109985"
                        target="_blank"
                        rel="noopener noreferrer"
                        style={{ color: "#4CAF50", textDecoration: "none", marginLeft: "5px" }}
                    >
                        Read more
                    </a>
                </>
            )
        }
    ];

    const startQuiz = () => {
        setQuizStarted(true);
    };

    const handleRead = () => {
        if (currentPage < 10) {
            setCurrentPage(currentPage + 1)
        }
        if (currentInfo < info.length - 1) {
            setCurrentInfo(currentInfo + 1)
        }
    };

    const handleAnswer = (index) => {
        if (index === questions[currentQuestion].correct) {
            setScore(score + 1);
        }
        if (currentPage < 10) {
            setCurrentPage(currentPage + 1)
        }
        if (currentQuestion < questions.length - 1) {
            setCurrentQuestion(currentQuestion + 1);
        } else {
            setQuizStarted(false);
        }
    };

    const containerStyle = {
        padding: "2.5rem",
        maxWidth: "600px",
        height: 'auto',
        width: '90%',
        // height: '500px',
        margin: "6rem auto",
        backgroundColor: "rgba(50, 50, 50, 0.9)",
        color: "#fff",
        boxShadow: "0 10px 20px rgba(0, 0, 0, 0.6)",
        textAlign: "center",
        lineHeight: "1.8",
    };

    const quizButtonStyle = {
        display: "block",
        margin: "1rem auto",
        padding: "1rem 1.5rem",
        background: "#333",
        color: "#fff",
        border: "1px solid #4CAF50",
        borderRadius: "5px",
        fontSize: "1rem",
        width: "100%",
        maxWidth: "300px",
        cursor: "pointer",
        transition: "background 0.3s",
    };

    const buttonStyle = {
        marginTop: "2rem",
        padding: "1rem 2rem",
        background: "linear-gradient(45deg, #4CAF50, #32a852)",
        color: "#fff",
        border: "none",
        borderRadius: "5px",
        fontSize: "1rem",
        cursor: "pointer",
        transition: "all 0.3s",
    };

    return (
        <>            <Header />
            <div className="w-screen">
            <div style={containerStyle}>

                {!quizStarted && currentPage === 0 && (
                    <>


                        <h1 style={{ fontSize: "1.5rem", marginBottom: "1.5rem", color: "#4CAF50" }}>

                            Understanding Deepfakes
                        </h1>
                        <p style={{ marginBottom: "1rem", fontSize: "1.1rem", color: "#ddd" }}>
                            Deepfakes are AI-generated media that can alter reality.
                            They can be used for both creative purposes and malicious intent.
                        </p>
                        <button onClick={startQuiz} style={buttonStyle}>
                            Start Quiz
                        </button>
                    </>
                )}
                { quizStarted && currentPage % 2 === 0 && (
                    <div>
                        <h2 style={{fontSize: "1.5rem", marginBottom: "1rem"}}>
                            {info[currentInfo].header}
                        </h2>
                        <div style={{fontSize: '1rem'}}>
                            {info[currentInfo].content}
                            <button
                                onClick={() => handleRead()}
                                style={quizButtonStyle}
                                >
                                Next
                            </button>
                        </div>
                    </div>
                )}
                {quizStarted && currentPage % 2 !== 0 && (
                    <div>
                        <h2 style={{fontSize: "1.5rem", marginBottom: "1rem"}}>
                            {questions[currentQuestion].question}
                        </h2>
                        <div style={{fontSize: '1rem'}}>
                            {questions[currentQuestion].options.map((option, index) => (
                                <button
                                    key={index}
                                    onClick={() => handleAnswer(index)}
                                    style={quizButtonStyle}
                                >
                                    {option}
                                </button>
                            ))}
                        </div>
                    </div>
                )}
                {!quizStarted && currentPage > 0 && (
                    <div>
                        <h2 style={{ color: "#4CAF50", fontSize: "2rem", marginBottom: "1rem" }}>
                            Quiz Completed!
                        </h2>
                        <p style={{ marginBottom: "1.5rem", fontSize: "1.2rem" }}>
                            Your Score: <strong>{score}/{questions.length}</strong>
                        </p>
                        <button
                            onClick={() => {
                                setQuizStarted(false);
                                setScore(0);
                                setCurrentPage(0);
                            }}
                            style={buttonStyle}
                        >
                            Try Again
                        </button>
                    </div>
                )}
            </div>
            </div>

            <Footer />
            <style>
                {`
                @media (max-width: 800px) {
                    h1 {
                        font-size: 1.1rem;
                    }
                    h2 {
                        font-size: 1.1rem;
                    }
                    p {
                        font-size: 1rem;
                    }
                    button {
                        font-size: 0.9rem;
                    }
                }
                `}
            </style>
            </>


    );
};
